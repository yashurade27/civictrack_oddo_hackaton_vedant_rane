generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

enum Status {
  REPORTED
  IN_PROGRESS
  RESOLVED
  CLOSED
}

enum Category {
  ROADS
  LIGHTING
  WATER_SUPPLY
  CLEANLINESS
  PUBLIC_SAFETY
  OBSTRUCTIONS
}

model User {
  id        String    @id @default(uuid())
  clerkId   String    @unique             // External auth ID (e.g., Clerk)
  email     String?   @unique
  role      Role      @default(user)
  isBanned  Boolean   @default(false)
  name      String?
  reports   Report[]
  comments  Comment[]
  spamFlags SpamFlag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([role])
}

model Report {
  id           String     @id @default(uuid())
  title        String
  description  String
  category     Category
  status       Status     @default(REPORTED)

  // Google Maps Fields
  latitude     Float
  longitude    Float
  address      String?            // Formatted address (from reverse geocoding)
  placeId      String?            // Google Place ID
  locality     String?            // City / Neighborhood
  postalCode   String?            // ZIP / postal code

  user         User?      @relation(fields: [userId], references: [id])
  userId       String?

  photos       Photo[]
  comments     Comment[]
  spamFlags    SpamFlag[]
  logs         StatusLog[]

  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@index([placeId])
  @@index([latitude, longitude])
}

model Photo {
  id        String   @id @default(uuid())
  url       String
  report    Report   @relation(fields: [reportId], references: [id])
  reportId  String
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  report    Report   @relation(fields: [reportId], references: [id])
  reportId  String
  createdAt DateTime @default(now())
}

model SpamFlag {
  id        String   @id @default(uuid())
  report    Report   @relation(fields: [reportId], references: [id])
  reportId  String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

model StatusLog {
  id        String   @id @default(uuid())
  status    Status
  timestamp DateTime @default(now())
  report    Report   @relation(fields: [reportId], references: [id])
  reportId  String
}



// Dev Flow
// 1. Modify your schema.prisma file
// 2. Run `npx primsa migrate dev --name <migration-name>` to create a new migration
// 3. Run `npx prisma generate` to regenerate the Prisma Client
// 4. Use the Prisma Client in your application code